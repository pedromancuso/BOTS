WiFiClient espClient;
PubSubClient client(espClient);
char SERVER[50];char TOPIC[50];char PASSWORD[50];char PLACA[50];
String USERNAME;char MQTTCALLBACK[100]; 
int SERVERPORT;
////////////////////////////////RECONNECT//////////////////////////////////////////////////////////////////////////
////////////////////////////////RECONNECT//////////////////////////////////////////////////////////////////////////
////////////////////////////////RECONNECT//////////////////////////////////////////////////////////////////////////
////////////////////////////////RECONNECT//////////////////////////////////////////////////////////////////////////
void reconnect() {
  int retries = 0;
  if(!client.connected() && retries <2){
    Serial.print("Intentando conexion MQTT...");
    /*String clientId = "ESP8266Client-"+String(random(0xffff), HEX);*/
    USERNAME.toCharArray(PLACA,USERNAME.length()+1);
    if(client.connect("",PLACA,PASSWORD)){Serial.println("Conectado");client.subscribe(TOPIC);}/*/////////////////SUSCRIBE*/
    else{Serial.println("Fallo, rc=" + String(client.state())+" Intenta nuevamente en 3 segundos");delay(3000);}
    retries++;
  }
}
////////////////////////////////PUBLISH//////////////////////////////////////////////////////////////////////////
////////////////////////////////PUBLISH//////////////////////////////////////////////////////////////////////////
String mqttpublish(String strtopic){
  char valueStr[30];
  strtopic.toCharArray(valueStr, strtopic.length()+1);
  client.publish(TOPIC, (uint8_t*)valueStr,strlen(valueStr),true);
  return "Enviando: [" +  String(TOPIC) + "] " + strtopic;
}
////////////////////////////////ORDENADOR//////////////////////////////////////////////////////////////////////////
////////////////////////////////ORDENADOR//////////////////////////////////////////////////////////////////////////
int RFReceive;
void ordenador(){  
  if(strcmp(MQTTCALLBACK, "1I")==0){char RFCode[50];strcpy(RFCode,"0100111000110001000000011000");if(EmisRF(RFCode)){mqttpublish("1O");}}
  if(strcmp(MQTTCALLBACK, "1O")==0){RFReceive=1;}
}
////////////////////////////////CALLBACK//////////////////////////////////////////////////////////////////////////
////////////////////////////////CALLBACK//////////////////////////////////////////////////////////////////////////
void callback(char* callbacktopic, byte* payload, unsigned int length) {
  String PAYLOAD = "";
  for (int i = 0; i < length; i++) {PAYLOAD += (char)payload[i];}
  PAYLOAD.toCharArray(MQTTCALLBACK,PAYLOAD.length()+1);
  Serial.print("Mensaje Recibido: ["+String(callbacktopic)+"]: ");Serial.println(MQTTCALLBACK);
  ordenador();
}
////////////////////////////////MQTTCLIENTSETUP//////////////////////////////////////////////////////////////////////////
////////////////////////////////MQTTCLIENTSETUP//////////////////////////////////////////////////////////////////////////
void mqttclientsetup(){client.setServer(SERVER, SERVERPORT);client.setCallback(callback);}
////////////////////////////////MQTTCLIENTHANDLE//////////////////////////////////////////////////////////////////////////
////////////////////////////////MQTTCLIENTHANDLE//////////////////////////////////////////////////////////////////////////
void mqttclienthandle(){if(!client.connected()){reconnect();}client.loop();}
